{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["t","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","currentParagraph","totalParagraphs","speed","handleTextChange","bind","assertThisInitialized","handleSpeedChange","readParagraph","readCurrentParagraph","begin","rewind","ff","end","pause","stopReading","document","getElementById","innerHTML","setState","split","length","event","preventDefault","target","value","string","wordArray","push","mainDiv","k","_loop","i","setTimeout","concat","currentSpeed","clearTimeout","alert","react_default","a","createElement","className","alt","width","src","id","onChange","name","rows","cols","wrap","onClick","align","type","href","rel","onclick","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.16c7d297.chunk.js","sourcesContent":["/* global chrome */\n\nimport React, { Component } from 'react';\nimport './App.css';\n// import readerApp, { stopReading } from './utils';\n\nlet t;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: `This extension is designed to help you read faster than you ever knew you could.\\nJust paste your text here, or select text on a webpage and see how fast you can read!`,\n      currentParagraph: 1,\n      totalParagraphs: 0,\n      speed: 135,\n    };\n\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleSpeedChange = this.handleSpeedChange.bind(this);\n    this.readParagraph = this.readParagraph.bind(this);\n    this.readCurrentParagraph = this.readCurrentParagraph.bind(this);\n    this.begin = this.begin.bind(this);\n    this.rewind = this.rewind.bind(this);\n    this.ff = this.ff.bind(this);\n    this.end = this.end.bind(this);\n    this.pause = this.pause.bind(this);\n    this.stopReading = this.stopReading.bind(this);\n  }\n\n  componentDidMount() {\n    const textField = document.getElementById('text-input');\n    textField.innerHTML = this.state.text;\n\n    this.setState({ totalParagraphs: this.state.text.split('\\n').length });\n    // chrome.tabs.executeScript(\n    //   {\n    //     code: 'window.getSelection().toString();',\n    //   },\n    //   function(selection) {\n    //     console.log(selection);\n    //     if (selection[0]) {\n    //       this.setState((this.state.text = selection[0]));\n    //       textField.innerHTML = this.state.text;\n    //     }\n    //   }\n    // );\n  }\n\n  handleTextChange(event) {\n    event.preventDefault();\n\n    this.setState({\n      text: event.target.value,\n      totalParagraphs: event.target.value.split('\\n').length,\n      currentParagraph: 1,\n    });\n  }\n\n  handleSpeedChange(event) {\n    event.preventDefault();\n    this.setState({ speed: event.target.value });\n  }\n\n  begin() {\n    this.setState({ currentParagraph: 1 });\n  }\n\n  rewind() {\n    this.setState({ currentParagraph: this.state.currentParagraph - 1 });\n  }\n\n  ff() {\n    this.setState({ currentParagraph: this.state.currentParagraph + 1 });\n  }\n\n  end() {\n    this.setState({ currentParagraph: this.state.text.split('\\n').length });\n  }\n\n  readParagraph(string, speed) {\n    let wordArray = string.split(' ');\n    wordArray.push('&nbsp;');\n    let mainDiv = document.getElementById('read-view');\n    let k = 1;\n\n    for (let i = 0; i < wordArray.length; i++) {\n      t = setTimeout(() => {\n        mainDiv.innerHTML = `${wordArray[i]}`;\n      }, k * speed);\n      k++;\n    }\n  }\n\n  readCurrentParagraph() {\n    const currentSpeed = this.state.speed;\n    this.readParagraph(\n      this.state.text.split('\\n')[this.state.currentParagraph - 1],\n      currentSpeed\n    );\n    if (this.state.currentParagraph < this.state.totalParagraphs) {\n      this.setState({ currentParagraph: this.state.currentParagraph + 1 });\n    } else {\n      this.setState({ currentParagraph: 1 });\n    }\n  }\n\n  stopReading() {\n    clearTimeout(t);\n    alert(`This doesn't work yet`);\n  }\n\n  pause() {\n    alert('Reading Paused: Click OK to Resume');\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <div>\n            <img alt=\"\" width=\"100px;\" src=\"/icon_128.png\" />\n          </div>\n        </div>\n\n        <h3>Highlight text you want to SpeedRead</h3>\n\n        <div id=\"read-view\">&nbsp;</div>\n\n        <textarea\n          onChange={this.handleTextChange}\n          id=\"text-input\"\n          name=\"text\"\n          rows=\"14\"\n          cols=\"10\"\n          wrap=\"soft\"\n          value={this.state.text}\n        />\n\n        <div className=\"counter\">\n          <div>Paragraph:&nbsp;(&nbsp;</div>\n          <div id=\"currentParagraph\">{this.state.currentParagraph}</div>\n          <div>&nbsp;/&nbsp;</div>\n          <div id=\"totalNumberOfParagraphs\">{this.state.totalParagraphs}</div>\n          <div>&nbsp;)</div>\n        </div>\n\n        <div className=\"controls\">\n          <img\n            alt=\"\"\n            onClick={this.begin}\n            className=\"icon scrub\"\n            id=\"begin\"\n            src=\"/images/begin.png\"\n          />\n          <img\n            alt=\"\"\n            onClick={this.rewind}\n            className=\"icon scrub\"\n            id=\"rewind\"\n            src=\"/images/rewind.png\"\n          />\n          <img\n            alt=\"\"\n            onClick={this.readCurrentParagraph}\n            className=\"icon scrub\"\n            id=\"play\"\n            src=\"/images/play.png\"\n          />\n          <img\n            alt=\"\"\n            onClick={this.pause}\n            className=\"icon scrub\"\n            id=\"pause\"\n            src=\"/images/pause.png\"\n          />\n          <img\n            alt=\"\"\n            onClick={this.stopReading}\n            className=\"icon scrub\"\n            id=\"stop\"\n            src=\"/images/stop.png\"\n          />\n          <img\n            alt=\"\"\n            onClick={this.ff}\n            className=\"icon scrub\"\n            id=\"ff\"\n            src=\"/images/ff.png\"\n          />\n          <img\n            alt=\"\"\n            onClick={this.end}\n            className=\"icon scrub\"\n            id=\"end\"\n            src=\"/images/end.png\"\n          />\n        </div>\n\n        <table align=\"center\">\n          <tr>\n            <td>Speed (ms):</td>\n            <td />\n          </tr>\n          <tr>\n            <td>\n              <input\n                onChange={this.handleSpeedChange}\n                id=\"text-speed\"\n                type=\"number\"\n                value={this.state.speed}\n              />\n            </td>\n            <td>\n              <button onClick={this.readCurrentParagraph} id=\"textareaButton\">\n                Read Text\n              </button>\n            </td>\n          </tr>\n        </table>\n        <p>\n          &copy; Pillbox Media, Inc.{' '}\n          <a\n            href=\"https://www.github.com/pillboxmediainc\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fa fa-github\" />\n          </a>\n        </p>\n        <div id=\"footer\">\n          <a\n            href=\"/info.html\"\n            onclick=\"window.open('/info.html','name','width=600,height=400')\"\n          >\n            <img alt=\"\" className=\"icon info\" src=\"/images/info.png\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}